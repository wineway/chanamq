# To resolve:
# WARNING: Could not get desired SO_RCVBUF, adjust OS buffer to match aeron.socket.so_rcvbuf: attempted=131072, actual=16384
# https://github.com/real-logic/Aeron/issues/151
# $ sudo sysctl net.core.rmem_max=131072
# $ sudo sysctl net.core.rmem_default=131072
akka {
  loglevel = "DEBUG"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  log-config-on-start = off
}

akka {
  actor.provider = "cluster"

  remote {
    artery {
      enabled = on
      canonical.hostname = "127.0.0.1"
      canonical.port = 2560
    }
    # Settings for the failure detector to monitor connections.
    # For TCP it is not important to have fast failure detection, since
    # most connection failures are captured by TCP itself.
    # The default DeadlineFailureDetector will trigger if there are no heartbeats within
    # the duration heartbeat-interval + acceptable-heartbeat-pause, i.e. 20 seconds
    # with the default settings.
    transport-failure-detector {
      # How often keep-alive heartbeat messages should be sent to each connection.
      heartbeat-interval = 100 s   # default 4s
      # Number of potentially lost/delayed heartbeats that will be
      # accepted before considering it to be an anomaly.
      # A margin to the `heartbeat-interval` is important to be able to survive sudden,
      # occasional, pauses in heartbeat arrivals, due to for example garbage collect or
      # network drop.
      acceptable-heartbeat-pause = 250 s  # default 10s
    }
    retry-gate-closed-for = 2 s  # default 5s
  }
  cluster {
    metrics.enabled = off
    failure-detector {
      acceptable-heartbeat-pause = 6 s # default 3 s
      threshold = 12.0    # default 8.0
    }
    scheduler {
      # make it less than system's tick-duration to force start a new one
      tick-duration = 33 ms # default 33ms
      ticks-per-wheel = 512 # default 512
    }
    use-dispatcher = cluster-dispatcher
  }

  cluster.pub-sub.gossip-interval = 3 s  # default 1s
}

akka.cluster.seed-nodes = [
  "akka://chanamq@127.0.0.1:2560"
]

akka.cluster.auto-down-unreachable-after = off

cluster-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 2
    parallelism-max = 4
  }
}


akka.persistence.journal.plugin = "akka.persistence.journal.leveldb"
akka.persistence.journal.leveldb.dir = "target/journal"
akka.persistence.journal.leveldb.native = off

akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"
akka.persistence.snapshot-store.local.dir = "target/snapshots"

chana-mq-globalidservice-dispatcher {
  type = PinnedDispatcher
  executor = "thread-pool-executor"
}

chana-mq-exchange-dispatcher {
  type = Dispatcher
  executor = "affinity-pool-executor"
  # Configuration for the thread pool
  affinity-pool-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 1
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 1
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 16
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 100
}

chana.mq.service-board {
  # Actor name of the extention actor, /user/chanaService
  name = "chanaService"

  # Start the service on members tagged with this role.
  # All members are used if undefined or empty.
  role = ""
}

chana.mq.amqp.server {
  interface = "0.0.0.0"
  port = 5672
  enable = true
}

chana.mq.amqps.server {
  interface = "0.0.0.0"
  port = 5671
  enable = true
}

chana.mq.amqp.vhost {
  # the vhost entity actor id of default virtual host
  default-id = "AMQ.DEFAULT"

  # Vhost namespace separator. Do not contain this string in queue/exchange name.
  # You can change it by combining valid symbols of actor path: """-_.*$+:@&=,!~';"""
  # It's best to only use symbols in """-_.""", each symbol can be included multiple
  # times.
  seperator = "-_."
}

chana.mq.amqp.policy {
  #message-ttl = 600000 # in seconds
}

chana.mq.amqp.connection {
  heartbeat = 30 

  # 0 means unlimited
  channel-max = 0

  # largest frame size, which could be size of network buffer. The frame size 
  # should at least hold a SSL/TLS frame which in jdk1.8 is 33305 bytes
  # default is 131072 = 128 * 1024, which is aeron's default SO_RCVBUF size
  frame-max = 131072 
  frame-min = 4096
}

# internal ask timeout in seconds, should be less than heartbeat delay
chana.mq.internal.timeout = 20 

chana.mq.persistent.message = true

# Message entities keep in memory when refer count > 0, and will exit from memory
# when refer count == 0 or inactive more than chana.mq.message.inactive seconds
chana.mq.message.inactive = 3600

chana.mq.cassandra.pass-through {
  hosts = ["localhost"]
  port = "9042"

  keyspace = "chanamq"
}

chana.mq.ssl {
  password = "abcdef"
//  keystore = "src/main/resources/keys/server.p12"
  keystore = "F:\\chanamq-master\\chanamq-master\\chana-mq-server\\src\\main\\resources\\keys\\server.p12"
}

chana.mp.amqp.admin {
  port = 15672
}